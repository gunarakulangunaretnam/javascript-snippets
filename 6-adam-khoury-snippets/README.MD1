## 11. Custom Data Attribute Snippets

### Example 0

#### HTML

```HTML
<!DOCTYPE html>

<html>

    <head>

        <title>This is the title</title>

        <link rel="stylesheet" type="text/css" href="style.css">

    </head>

    <body>

        <div class="rokets" data-top="100" data-left="800" data-speed="3.5"></div>

        <div class="rokets" data-top="200" data-left="800" data-speed="6.5"></div>

        <script src="js.js" type="text/javascript"></script>

    </body>

</html>
```

#### CSS

```CSS
div.rokets {

    position:absolute;
   left:0px;
    background:url(s.png) no-repeat;
    width:255px;
    height:30px;
    transition:left 0s linear 0s;
}
```

#### JavaScript

```JavaScript
var rocketTop, rocketLeft, rocketSpeed, rocketImgs

window.onload = function () {

    rocketImgs = document.querySelectorAll('div.rokets');

    for (a = 0; a < rocketImgs.length; a++) {

        rocketTop = rocketImgs[a].dataset.top;
        rocketLeft = rocketImgs[a].dataset.left;
        rocketSpeed = rocketImgs[a].dataset.speed;
        rocketImgs[a].style.top = rocketTop + "px";
        rocketImgs[a].style.webkitTransitionDuration = rocketSpeed + "s";
        rocketImgs[a].style.left = rocketLeft+"px";
    }
}
/*Notes
*We can use data attribute for many differnt programs.
 We do not have to use it only for activating rokets.This is an example.
*/
```

### Output

![Banner Image](github-content/example-10-0-output.gif/)

## 12. Custom Progress Bar Meter Snippets

### Example 0

#### HTML

```HTML
<!DOCTYPE html>

<html>

    <head>

        <title>This is the title</title>

        <link rel="stylesheet" type="text/css" href="style.css">

    </head>

    <body>

        <div id="pbc">

            <div id="pb"></div>
            <div id="pbt"></div>

        </div>

        <script src="js.js" type="text/javascript"></script>

    </body>

</html>
```

#### CSS

```CSS
#pbc {

    width:250px;
    height:16px;
    background:#000;
    border:1px solid #000;
}

    #pbc > #pb {

    position:relative;
    top:0px;
    background:#06c;
    width:0%;
    height:16px;
    color:#0ff;
    text-align:center;

    }

    #pbc > #pbt {

    position:relative;
    top:-19px;
    text-align:center;
    color:#fff;
    padding:4px;
    height:8px;
    font-size:12px;

    }
```

#### JavaScript

```JavaScript
var value1 = 70;

var pbt = document.getElementById("pbt");
var pb = document.getElementById("pb");
pb.style.width = value1 + "%";
pbt.innerHTML=value1+"%";
```

### Output

![Banner Image](github-content/example-11-0-output.png/)

## 13. DIV Select All Text Snippets

### Example 0

#### HTML

```HTML
<!DOCTYPE html>

<html>

    <head>

        <title>This is the title</title>

        <link rel="stylesheet" type="text/css" href="style.css">

    </head>

<body>

    <div id="div1"  onclick="document.execCommand('selectAll',false,null)">

        <pre>
<code>
   public class(){

    public static void main(String[args]){

    system.out.println("Hello World");
    }
    }
</code>
</pre>

    </div>

    <script src="js.js" type="text/javascript"></script>

</body>

</html>
```

## 14. Drag and Drop Application Snippets

### Example 0

#### HTML

```HTML
<!DOCTYPE html>

<html>

    <head>

        <title>This is the title</title>

        <link rel="stylesheet" type="text/css" href="style.css">

    </head>

<body>

    <h2 id="app_status">App Status</h2>
    <h1>Drop Zone</h1>

    <div id="drop_zone" ondragenter="drag_enter(event)" ondrop="drag_drop(event)" ondragover="return false" ondragleave="drag_leave(event)"></div>

    <div id="object1" class="objects" draggable="true" ondragstart="drag_start(event)" ondragend="drag_end(event)">Object 1</div>
    <div id="object2" class="objects" draggable="true" ondragstart="drag_start(event)" ondragend="drag_end(event)">Object 2</div>
    <div id="object3" class="objects" draggable="true" ondragstart="drag_start(event)" ondragend="drag_end(event)">Object 3</div>

    <hr />

    <button onclick="readDropZone()">Get Object Data</button>
    <script src="js.js" type="text/javascript"></script>

</body>

</html>
```

#### CSS

```CSS
.objects {
    display: inline-block;
    background-color: #FFF3CC;
    border: #DFBC6A;
    width: 50px;
    height: 50px;
    margin: 10px;
    padding: 8px;
    font-size: 18px;
    text-align: center;
    -moz-box-shadow: 2px 2px 2px #999;
    -webkit-box-shadow: 2px 2px 2px #999;
    box-shadow: 2px 2px 2px #999;
    cursor:move;
}
#drop_zone {
    background-color:#EEE;
    border:#999 1px solid;
    width:280px;
    height:200px;
    padding:8px;
    font-size:18px;
}
```

#### JavaScript

```JavaScript
function _(id) {

    return document.getElementById(id);
}

var droppedIn = false;

function drag_start(event) {

    _("app_status").innerHTML = "Dragging the " + event.target.getAttribute('id'); // event.target.getAttribute('id') means it gets the target object id name; that is object 1,2 or 3. that you are clicking
    event.dataTransfer.dropEffect = "move";//This is the effect
    event.dataTransfer.setData("text", event.target.getAttribute('id'));//setData('text') is the name of the place you have to give the same name to the drop place for getData.the second returns the id as above.


}

function drag_enter(event) {

    _("app_status").innerHTML = "You are dropping over the " + event.target.getAttribute('id');// event.target.getAttribute('id') means it gets the target object id name; that is object 1,2 or 3. that you are clicking
}

function drag_leave(event) {

    _("app_status").innerHTML = "You left the " + event.target.getAttribute('id');// event.target.getAttribute('id') means it gets the target object id name; that is object 1,2 or 3. that you are clicking

}

function drag_drop(event) {
    event.preventDefault();  //Prevent undesirable default behavior while dropping.
    var elem_id = event.dataTransfer.getData("text");//getData is the place.Text is the name of the place.
    event.target.appendChild(_(elem_id));//
    _(elem_id).removeAttribute("draggable");//remove the draggable event.
    _(elem_id).style.cursor = "default";//change the cursor as default.

    droppedIn = true;


}

function drag_end(event) {

    if (droppedIn == false) {

        _('app_status').innerHTML = "You left " + event.target.getAttribute('id') + " go";

    }

    droppedIn = false;

	/*
	This function tells if the user put down the object print out you left + event.target.getAttribute('id').

	*/
}

function readDropZone() {

    for (a = 0; a < _("drop_zone").children.length; a++) {

        alert(_('drop_zone').children[a].id + " is in the drop zone");

    }

/*
	This function  prints out the following object in drop_zone.

	*/
}
```

### Output

![Banner Image](github-content/example-13-0-output.gif/)

## 15. Dynamic Lorem Ipsum Placeholder Text Generator Snippets

### Example 0

#### HTML

```HTML
<!DOCTYPE html>

<html>

    <head>

        <title>This is the title</title>

        <link rel="stylesheet" type="text/css" href="style.css">

    </head>

<body>

    <script src="js.js" type="text/javascript"></script>

</body>

</html>
```

#### JavaScript

```JavaScript
var ipsum = "This is Joker Hacker I am going to hack you systm.Plase forgive me";

for (i = 0; i < 100; i++) {

    if (i % 10 == 0 && i > 1) {

        document.write("<br>" + "<br>");
    }

    document.write(ipsum);
}

/*Notes
* This program prints out the ipsum 100 times to the screen in 10 section.
*/
```

### Output

![Banner Image](github-content/example-14-0-output.png/)

## 16. Exam Application Snippets

### Example 0

#### HTML

```HTML
<!DOCTYPE html>

<html>

    <head>

        <title>This is the title</title>

        <link rel="stylesheet" type="text/css" href="style.css">

    </head>

<body>

    <h2 id="test_status"></h2>
    <div id="test"></div>

    <script src="js.js" type="text/javascript"></script>

</body>

</html>
```

#### CSS

```CSS
div#test {

    border:1px solid #000;
    padding:10px,40px,40px,40px;

}
```

#### JavaScript

```JavaScript
var pos = 0, test, test_status, question, choice, choices, chA, chB, chC, correct = 0;

var questions = [

    ["What is 10 + 4?", "12", "14", "16", "B"],
    ["What is 20 - 9?", "7", "13", "11", "C"],
    ["What is 7 x 3?", "21", "24", "25", "A"],
    ["What is 8 / 2?", "10", "2", "4", "C"]

]



function _(x) {

    return document.getElementById(x);


    /*
     This is function returns document.getElementByid() method as _().
     We can use _() function instead of document.getElementByid() method.

     */
}


window.addEventListener("load", renderQuestion, false);//This means once the all the html elements loads successfully then run the  renderQuestion() function.

function renderQuestion() {

    if (pos >= questions.length) {

        test.innerHTML = "<h2> You got " + correct + " of " + questions.length + " questions correct</h2>";
        _("test_status").innerHTML = " The test is finished";
        pos = 0;
        correct = 0;

        return false; //This means once the test has been completed stop the renderQuestion() function.
    }

    test = _("test");


    _("test_status").innerHTML = "Question " + (pos + 1) + " of " + questions.length;

	question=questions[pos][0];
	chA = questions[pos][1];
	chB = questions[pos][2];
	chC = questions[pos][3];

	test.innerHTML = "<h3>" + question + "</h3>"

	test.innerHTML += ' <input type="radio" name="choices" value="A" />' + chA + "<br>";// I put '+=' sign for incrementing the value.
	test.innerHTML += ' <input type="radio" name="choices" value="B" />' + chB + "<br>";// But if i put '=' sign ,the only the last element is going to bind up with it.
	test.innerHTML += ' <input type="radio" name="choices" value="C" />' + chC + "<br>";//
	test.innerHTML += ' <button onclick="checkAnswer()">Submit Answer</button>';




	/*

     in line 44.that's goning to say Question 1 of 4.because i put "pos+1" for user understanding if i didn't put it, it will say Question 0 of 4.
	 in line 44 also questions.length means how many questions we have in the questions array.

	*/
}
function checkAnswer() {

    choices = document.getElementsByName("choices");

    for (i = 0; i < choices.length; i++) {

        if (choices[i].checked) {

            choice = choices[i].value;//The user answer is stored in the choice variable.
        }

    }

    if (choice == questions[pos][4]) {

        correct++;
    }
    pos++;  //This changes the position which question we are on.We increment the position one by one when the user clicks the checkAnswer().
    renderQuestion()   //Then we run the renderQuestion() function again when the user clicks the checkAnswer() with a new pos value.

	/*
	in line 71 to 80 we have a for loop in the for loop we get the user answer.

	*/
}
```

### Output

![Banner Image](github-content/example-15-0-output.gif/)
